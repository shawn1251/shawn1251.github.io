<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Devops on Shawn&#39;s Note</title>
        <link>http://shawn1251.github.io/tags/devops/</link>
        <description>Recent content in Devops on Shawn&#39;s Note</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Thu, 02 Nov 2023 00:00:00 +0800</lastBuildDate><atom:link href="http://shawn1251.github.io/tags/devops/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>AWS Note - Project Lifting and Shifting</title>
        <link>http://shawn1251.github.io/post/aws-note-shift-to-cloud/</link>
        <pubDate>Thu, 02 Nov 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/post/aws-note-shift-to-cloud/</guid>
        <description>&lt;p&gt;I&amp;rsquo;m currently learning &lt;a class=&#34;link&#34; href=&#34;https://www.udemy.com/course/decodingdevops/#reviews&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DevOps Beginners to Advanced with Projects&lt;/a&gt; on Udemy. Here are some notes on using AWS.&lt;/p&gt;
&lt;h2 id=&#34;original-application-stack&#34;&gt;Original Application Stack&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/hkhcoder/vprofile-project/tree/aws-LiftAndShift&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Project GitHub&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nginx&lt;/li&gt;
&lt;li&gt;Apache&lt;/li&gt;
&lt;li&gt;Tomcat&lt;/li&gt;
&lt;li&gt;RabbitMQ&lt;/li&gt;
&lt;li&gt;Memcache&lt;/li&gt;
&lt;li&gt;Mysql
&lt;figure&gt;&lt;img src=&#34;http://shawn1251.github.io/post/aws-note-shift-to-cloud/images/origin-arch.drawio.png&#34; width=&#34;30%&#34;&gt;
&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;migration-goals&#34;&gt;Migration Goals&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;EC2
&lt;ul&gt;
&lt;li&gt;VMs for tomcat, rabbitmq, memcache, mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ELB (Elastic Load Balancer)
&lt;ul&gt;
&lt;li&gt;Replaces nginx for load balancing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Autoscaling
&lt;ul&gt;
&lt;li&gt;Automation for VM scaling&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;S3/EFS
&lt;ul&gt;
&lt;li&gt;Shared storage&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Route 53
&lt;ul&gt;
&lt;li&gt;Private DNS service&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;target-architecture&#34;&gt;Target Architecture&lt;/h3&gt;
&lt;figure&gt;&lt;img src=&#34;http://shawn1251.github.io/post/aws-note-shift-to-cloud/images/shift-aws-arch.drawio.png&#34; width=&#34;70%&#34;&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;flow-of-execution&#34;&gt;Flow of Execution&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Create key pairs&lt;/li&gt;
&lt;li&gt;Create security groups
&lt;ul&gt;
&lt;li&gt;Split into three groups:
&lt;ul&gt;
&lt;li&gt;LB (replaces nginx)&lt;/li&gt;
&lt;li&gt;APP (for tomcat)&lt;/li&gt;
&lt;li&gt;Backend (including rabbitmq, memcache, mysql)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Launch instances with user data&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Currently a semi-automated process&lt;/li&gt;
&lt;li&gt;Manually create instances and paste shell scripts for environment setup into userdata&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Update IP to name mapping in Route 53
&lt;ul&gt;
&lt;li&gt;Set up an internal DNS for communication between instances using hostnames&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Build the application from source code
&lt;ul&gt;
&lt;li&gt;This part is still semi-automated. Build the Java project on the local machine.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Upload to S3 bucket
&lt;ul&gt;
&lt;li&gt;Use AWS CLI to upload the built Java WAR file to the APP instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Download artifact to Tomcat EC2 instance
&lt;ul&gt;
&lt;li&gt;Previously, we used keys for S3 access. Here, instances connect to S3 using IAM roles.
&lt;ul&gt;
&lt;li&gt;Create a new S3 access role in IAM.&lt;/li&gt;
&lt;li&gt;Attach the created role to the APP instance.&lt;/li&gt;
&lt;li&gt;Use aws s3 ls to confirm successful access.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Set up ELB with HTTPS (certificate from Amazon Certificate Manager)
&lt;ul&gt;
&lt;li&gt;Create a target group, ensuring it points to port 8080 on the app.&lt;/li&gt;
&lt;li&gt;Create an ELB with HTTP/HTTPS routing to the target group.&lt;/li&gt;
&lt;li&gt;Purchase a domain and apply for an SSL certificate from AWS Certificate Manager.&lt;/li&gt;
&lt;li&gt;In the secure listener, select the SSL certificate from ACM.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Map ELB endpoint to website name in DNS
&lt;ul&gt;
&lt;li&gt;At the DNS provider (in this case, GoDaddy), create a CNAME record that redirects to the AWS LB domain.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Verify
&lt;ul&gt;
&lt;li&gt;DNS settings may take some time to propagate.&lt;/li&gt;
&lt;li&gt;You can directly access the LB&amp;rsquo;s domain to check if the APP is running on port 80.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Build an autoscaling group for the tomcat instance
&lt;ul&gt;
&lt;li&gt;Autoscaling involves three steps:
&lt;ul&gt;
&lt;li&gt;AMI (Amazon Machine Image)
&lt;ul&gt;
&lt;li&gt;Create an image from the current APP instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Launch template
&lt;ul&gt;
&lt;li&gt;Use the created AMI, and keep the security group the same as the original APP.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Autoscaling group
&lt;ul&gt;
&lt;li&gt;Attach it to the existing load balancer.&lt;/li&gt;
&lt;li&gt;Choose the load balancer&amp;rsquo;s target group.&lt;/li&gt;
&lt;li&gt;Set scaling policies based on CPU usage or network in/out.&lt;/li&gt;
&lt;li&gt;Configure notifications.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>AWS Note</title>
        <link>http://shawn1251.github.io/post/aws-note/</link>
        <pubDate>Tue, 31 Oct 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/post/aws-note/</guid>
        <description>&lt;p&gt;I&amp;rsquo;m currently studying &lt;a class=&#34;link&#34; href=&#34;https://www.udemy.com/course/decodingdevops/#reviews&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DevOps Beginners to Advanced with Projects&lt;/a&gt; on Udemy. Here are some notes on using AWS:&lt;/p&gt;
&lt;h2 id=&#34;creating-an-ec2-instance&#34;&gt;Creating an EC2 Instance&lt;/h2&gt;
&lt;p&gt;The most basic computing unit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name and Tag
&lt;ul&gt;
&lt;li&gt;Here, you can choose to &amp;ldquo;add additional tags&amp;rdquo; to provide extra labels for easy identification on the AWS console.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AMI (Amazon Machine Image)
&lt;ul&gt;
&lt;li&gt;An AMI is like an image, similar to running a Docker image to create a container, but here, you create an EC2 instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Instance Type
&lt;ul&gt;
&lt;li&gt;For the free tier, I&amp;rsquo;ve only used t2.micro. In real scenarios, you can choose different resource levels based on your requirements.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Key Pair
&lt;ul&gt;
&lt;li&gt;AWS uses SSH keys for remote access. Choose the key pair for this instance. You can reuse a key pair across different instances for better key pair management.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Network Settings
&lt;ul&gt;
&lt;li&gt;Configure inbound and outbound rules. Typically, you&amp;rsquo;d open inbound for SSH and add &amp;ldquo;my IP&amp;rdquo; as the source. For web services, you&amp;rsquo;d add HTTP with a source of &amp;ldquo;anywhere.&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Configure Storage
&lt;ul&gt;
&lt;li&gt;AWS offers various storage types, such as SSD, HDD, and specialized types based on I/O.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Advanced
&lt;ul&gt;
&lt;li&gt;Here, I used the &amp;ldquo;User Data&amp;rdquo; field. You can write shell scripts in this field to install software or complete specific configurations during instance launch.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;elastic-block-store-ebs&#34;&gt;Elastic Block Store (EBS)&lt;/h2&gt;
&lt;p&gt;Storage options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Volume Type
&lt;ul&gt;
&lt;li&gt;You can choose storage types like SSD, HDD, or specialized types based on I/O.&lt;/li&gt;
&lt;li&gt;You can also select the region for volume creation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AWS allows dynamic attachment of volumes to instances.
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;fdisk -l&lt;/code&gt; to check the volume&amp;rsquo;s name.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;fdisk /dev/xvdf&lt;/code&gt; to create partitions. The path might vary based on the previous command&amp;rsquo;s output.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;m&lt;/code&gt; for help&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt; new partition&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt; primary&lt;/li&gt;
&lt;li&gt;partition number: default&lt;/li&gt;
&lt;li&gt;First sector: default&lt;/li&gt;
&lt;li&gt;Last sector: default&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt; write table to disk&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create partitions, format them using &lt;code&gt;mkfs.ext4&lt;/code&gt;, and check with &lt;code&gt;lsblk&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Mount the partition using &lt;code&gt;mount /dev/xvdf1 {target path}&lt;/code&gt;. To make it auto-mount, modify &lt;code&gt;/etc/fstab&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Snapshot
&lt;ul&gt;
&lt;li&gt;Important data, like a database, is often stored on a separate volume.&lt;/li&gt;
&lt;li&gt;You can use EBS snapshots to back up a volume and later restore it by creating a new volume from the snapshot.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;load-balancing&#34;&gt;Load Balancing&lt;/h2&gt;
&lt;p&gt;An example with two instances running the same HTTP server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a Target Group
&lt;ul&gt;
&lt;li&gt;Configure health checks to ensure instance health. For a web server, set up periodic HTTP requests to a specific path.&lt;/li&gt;
&lt;li&gt;Add instances to the target group.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a Load Balancer
&lt;ul&gt;
&lt;li&gt;For example, use an Application Load Balancer.&lt;/li&gt;
&lt;li&gt;Configure security groups for inbound HTTP traffic.&lt;/li&gt;
&lt;li&gt;Set up listeners &amp;amp; routing to forward traffic to the target group.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Adjust the security group of the target group to allow access from the load balancer&amp;rsquo;s security group.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cloudwatch&#34;&gt;CloudWatch&lt;/h2&gt;
&lt;p&gt;Create alarms, such as monitoring CPU resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &amp;ldquo;All Alarms&amp;rdquo; and create a new alarm.&lt;/li&gt;
&lt;li&gt;Select metrics, e.g., EC2, per-instance metrics.&lt;/li&gt;
&lt;li&gt;Choose the instance ID and select CPUUtilization.&lt;/li&gt;
&lt;li&gt;Set the threshold (e.g., 60%) and configure notification details for email or groups.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;amazon-elastic-file-system-efs&#34;&gt;Amazon Elastic File System (EFS)&lt;/h2&gt;
&lt;p&gt;Similar to NFS on Linux, suitable for shared storage among multiple instances:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a security group for EFS.
&lt;ul&gt;
&lt;li&gt;Create an EFS file system with default performance settings or adjust as needed.&lt;/li&gt;
&lt;li&gt;Configure network settings with the security group for all availability zones.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create an access point.
&lt;ul&gt;
&lt;li&gt;Mount EFS from an EC2 instance using the amazon-efs-utils. &lt;code&gt;sudo yum install -y amazon-efs-utils&lt;/code&gt;. &lt;a class=&#34;link&#34; href=&#34;https://docs.aws.amazon.com/efs/latest/ug/installing-amazon-efs-utils.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;official doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;/etc/fstab&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;{file-system-id}:/ {efs-mount-point} efs _netdev,noresvport,tls,accesspoint={access-point-id} 0 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.aws.amazon.com/efs/latest/ug/automount-with-efs-mount-helper.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;official doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;execute&lt;code&gt; mount -fav&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you see {mount-point}: successfully mounted, you&amp;rsquo;re done.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Commonly Used Shell Commands for Filtering</title>
        <link>http://shawn1251.github.io/post/shell-cmd-filter/</link>
        <pubDate>Mon, 30 Oct 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/post/shell-cmd-filter/</guid>
        <description>&lt;p&gt;For Linux users who are familiar with commands like cp, mv, and ls, here are some commands I found useful but took some time to master:&lt;/p&gt;
&lt;h2 id=&#34;cat&#34;&gt;cat&lt;/h2&gt;
&lt;p&gt;Most often, cat is used to display file contents, such as &lt;code&gt;cat {your file}&lt;/code&gt;. However, it can also be used to concatenate two files and create a new file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To concatenate two files:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat {file1} {file2} &amp;gt; {merged file}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To create a new file and write to it:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat &amp;gt; {your file}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;It will accept your input and write it to the file.&lt;/li&gt;
&lt;li&gt;Some automation scripts use this command to create files, like:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt; testFile &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;{your content}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;grep&#34;&gt;grep&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grep -R SELINUX /etc/*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-i: Ignore case.&lt;/li&gt;
&lt;li&gt;-R: Recursively search in subdirectories.&lt;/li&gt;
&lt;li&gt;-v: Invert match, output lines that don&amp;rsquo;t contain the keyword.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cut&#34;&gt;cut&lt;/h2&gt;
&lt;p&gt;This command is useful for quickly extracting specific content from files with a fixed format, such as /etc/passwd. In this file, each line is separated by colons (&amp;quot;:&amp;quot;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root:x:0:0:root:/root:/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vagrant:x:1000:1000::/home/vagrant:/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Using cut on this file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cut -d: -f1 /etc/passwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-d specifies the delimiter, and we use &amp;ldquo;:&amp;rdquo; to indicate that the delimiter is a colon.&lt;/li&gt;
&lt;li&gt;-f1 indicates that we want to extract the first field after splitting, which is the username.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The output will be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vagrant
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;awk&#34;&gt;awk&lt;/h2&gt;
&lt;p&gt;When the separator is more complex or variable, you can use awk. For the example mentioned above, you can use awk to achieve the same result:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;awk -F&lt;span class=&#34;s1&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; /etc/passwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-F specifies the field separator.
{print $1} specifies to print the first field after splitting.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sed&#34;&gt;sed&lt;/h2&gt;
&lt;p&gt;sed is used for text substitution. It operates on streams and doesn&amp;rsquo;t overwrite the original file. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;this is a book.&amp;#34;&lt;/span&gt; &amp;gt; &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Create a sample text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sed &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/book/dog/g&amp;#39;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; this is a dog.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# It replaces &amp;#34;book&amp;#34; with &amp;#34;dog&amp;#34; in the text.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# &amp;#39;s&amp;#39; stands for search.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# &amp;#39;g&amp;#39; stands for global.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# You can replace &amp;#39;test&amp;#39; with &amp;#39;*&amp;#39; to change multiple files.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; this is a book.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# The original file remains unchanged.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# To overwrite, you can add -i&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sed -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/book/dog/g&amp;#39;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; this is a dog.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;redirection&#34;&gt;Redirection&lt;/h2&gt;
&lt;p&gt;By default, the output of Linux commands is displayed on the screen, but you can redirect the output to a file. Here are some key points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; will overwrite the target, while &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; appends.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; is stdout, and &lt;code&gt;2&lt;/code&gt; is stderr.&lt;/li&gt;
&lt;li&gt;You can use &lt;code&gt;&amp;amp;&lt;/code&gt; to redirect all output.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# When the target is stdout, you don&amp;#39;t need to specify 1.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls &amp;gt;&amp;gt; tmpfile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# &amp;#39;lss&amp;#39; is a non-existent command that will produce an error. You can redirect its stderr output.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;lss 2&amp;gt;&amp;gt; tmpfile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# The &amp;#39;&amp;amp;&amp;#39; symbol redirects both stdout and stderr.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&amp;gt;&amp;gt; tmpfile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;lss &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&amp;gt;&amp;gt; tmpfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;pipe&#34;&gt;Pipe&lt;/h2&gt;
&lt;p&gt;Use the pipe &lt;code&gt;|&lt;/code&gt; to pass the output of one command as input to another.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Count the lines by passing the output of &amp;#39;ls&amp;#39; to &amp;#39;wc&amp;#39;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wc -l
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Extract the &amp;#39;Mem&amp;#39; column from the output of &amp;#39;free&amp;#39;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;free &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -i Mem
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>vagrant note</title>
        <link>http://shawn1251.github.io/post/vagrant-intro/</link>
        <pubDate>Sat, 28 Oct 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/post/vagrant-intro/</guid>
        <description>&lt;p&gt;Vagrant is a command line tool that makes it easy to automate the setup and launching of virtual machines (VMs). It&amp;rsquo;s not a hypervisor itself but operates as a layer on top of existing hypervisors, allowing users to quickly create VMs on those hypervisors. Vagrant doesn&amp;rsquo;t require an operating system image; the image (referred to as a &amp;ldquo;box&amp;rdquo;) specified in the Vagrantfile is fetched from Vagrant Cloud. You define the necessary parameters in the Vagrantfile, and then you can start the VM with the &lt;code&gt;vagrant up&lt;/code&gt; command.&lt;/p&gt;
&lt;h2 id=&#34;common-commands&#34;&gt;Common Commands&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;vagrant init {box name} - Initialize a new Vagrant environment with the specified box.&lt;/li&gt;
&lt;li&gt;vagrant up - Start the VM.&lt;/li&gt;
&lt;li&gt;vagrant ssh - Log in to the VM via SSH.&lt;/li&gt;
&lt;li&gt;vagrant halt - Stop the VM.&lt;/li&gt;
&lt;li&gt;vagrant destroy - Remove the VM.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;process&#34;&gt;Process&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create a folder.&lt;/li&gt;
&lt;li&gt;Create a Vagrantfile.&lt;/li&gt;
&lt;li&gt;Run vagrant up to start the VM.&lt;/li&gt;
&lt;li&gt;Use vagrant ssh to access the VM.&lt;/li&gt;
&lt;li&gt;Stop or delete the VM with vagrant halt or vagrant destroy.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;You can find VM images (boxes) on Vagrant Cloud: &lt;a class=&#34;link&#34; href=&#34;https://app.vagrantup.com/boxes/search&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://app.vagrantup.com/boxes/search&lt;/a&gt;. Initialize a new Vagrant environment with a specific box using vagrant init {box name} and start it with vagrant up. You can check the status of your VMs with vagrant global-status.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vagrant init {box name}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vagrant up
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vagrant global-status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;provision-of-vagrantfile&#34;&gt;Provision of Vagrantfile&lt;/h2&gt;
&lt;p&gt;Provisioning allows you to run commands on the VM before its first boot, such as installing specific software. You can refer to the official Vagrantfile documentation for more details. Here&amp;rsquo;s an example of provisioning to install Apache2 during VM setup:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Example provisioning to install Apache2 during VM setup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;config.vm.provision &amp;#34;shell&amp;#34;, inline: &amp;lt;&amp;lt;-SHELL
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  apt-get install -y apache2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SHELL
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
