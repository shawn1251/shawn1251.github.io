<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Shawn&#39;s Note</title>
        <link>http://shawn1251.github.io/zh-tw/</link>
        <description>Recent content on Shawn&#39;s Note</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-tw</language>
        <lastBuildDate>Mon, 20 Nov 2023 00:00:00 +0800</lastBuildDate><atom:link href="http://shawn1251.github.io/zh-tw/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>使用CH340燒錄程式到STM32</title>
        <link>http://shawn1251.github.io/zh-tw/post/stm32-ch340/</link>
        <pubDate>Mon, 20 Nov 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/post/stm32-ch340/</guid>
        <description>&lt;p&gt;最近在用STM32學習嵌入式開發。但由於沒有STLINK，我這邊只能使用CH340燒錄。這邊記錄了一下過程。&lt;/p&gt;
&lt;h2 id=&#34;需求軟體&#34;&gt;需求軟體&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Keil5&lt;/li&gt;
&lt;li&gt;FlyMcu&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;步驟&#34;&gt;步驟&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CH340有幾個針腳
&lt;ul&gt;
&lt;li&gt;VCC: 這有一個跳線帽，可以設定5V/3.3V&lt;/li&gt;
&lt;li&gt;RX: 接收，接在GPIO的PA09&lt;/li&gt;
&lt;li&gt;TX: 發送，接在GPIO的PA10&lt;/li&gt;
&lt;li&gt;GND: 接地&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;燒錄需要的是hex檔，所以在我的IDE Keil5上要額外設定
&lt;ul&gt;
&lt;li&gt;點擊魔術棒的icon(options for target)&lt;/li&gt;
&lt;li&gt;Output &amp;gt; create hex file&lt;/li&gt;
&lt;li&gt;之後在build後，hex file會出現在Objects資料夾中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;這邊使用的燒錄軟體是FlyMcu，以下是燒錄步驟
&lt;ul&gt;
&lt;li&gt;插上CH340後，確認上方的port com為我們的CH340&lt;/li&gt;
&lt;li&gt;Code file for online ISP &amp;gt; 選擇build好的hex file&lt;/li&gt;
&lt;li&gt;勾選 Verify, Run After ISP complete&lt;/li&gt;
&lt;li&gt;取消勾選 Program OptionBytes when ISP&lt;/li&gt;
&lt;li&gt;接著就能點擊 Start ISP&lt;/li&gt;
&lt;li&gt;如果右側訊息出現下方訊息表示成功
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;....
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Write 1KB Ok,100%,@1562ms
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Go from 08000000 Ok
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果要再燒錄新的program，要按一下stm32上的reset按鈕&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Apache Airflow 筆記</title>
        <link>http://shawn1251.github.io/zh-tw/post/apache-airflow/</link>
        <pubDate>Tue, 14 Nov 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/post/apache-airflow/</guid>
        <description>&lt;p&gt;任務調動的工具。有過基礎linux經驗的應該都知道crontab，但他有無法建立複雜任務依賴，簡單調閱日誌等缺點，這時就需要一個完善的ETL工具。本篇筆記簡單記錄我的學習過程，並將成果上傳到&lt;a class=&#34;link&#34; href=&#34;https://github.com/shawn1251/StockFlow&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;github repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另外目前airflow已經發展到v2，而網路上還能找到不少關於v1的教學，所以在學習的時候要注意版本。官方的文章&lt;a class=&#34;link&#34; href=&#34;https://airflow.apache.org/blog/airflow-two-point-oh-is-here/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在此&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;特點&#34;&gt;特點&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;開源&lt;/li&gt;
&lt;li&gt;友善的UI&lt;/li&gt;
&lt;li&gt;有豐富的plugin&lt;/li&gt;
&lt;li&gt;純python&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;推薦快速啟動可以使用官方docker compose
&lt;a class=&#34;link&#34; href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -LfO &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://airflow.apache.org/docs/apache-airflow/2.7.3/docker-compose.yaml&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;創建必要volume與設定airflow執行者&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir -p ./dags ./logs ./plugins ./config
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;AIRFLOW_UID=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;id -u&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt; .env
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;init與執行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker compose up airflow-init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker compose up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;dag&#34;&gt;DAG&lt;/h2&gt;
&lt;p&gt;DAG(Directed Acyclic Graph)有向無環圖。在Airflow中，DAG是一個工作流程的定義，描述了一系列的任務（Tasks）和它們之間的依賴關係。每個任務代表一個工作單元，可以是任何可以在Airflow中執行的操作，例如執行Python腳本、執行SQL查詢、調用外部API等。&lt;/p&gt;
&lt;h3 id=&#34;example&#34;&gt;example&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;airflow&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DAG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;airflow.operators.dummy_operator&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DummyOperator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;airflow.operators.python_operator&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PythonOperator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 定義預設參數&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;default_args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;owner&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;airflow&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;depends_on_past&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;start_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2023&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;email_on_failure&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;email_on_retry&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;retries&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;retry_delay&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minutes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;print_hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello from the PythonOperator task&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 定義DAG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DAG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;simple_dag_example&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;default_args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;default_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A simple example DAG&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schedule_interval&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;days&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 每天執行一次&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 定義兩個任務，v2開始也能使用decorator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;start_task&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DummyOperator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;task_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;start_task&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;dag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;python_task&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PythonOperator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;task_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;python_task&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;python_callable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;print_hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;dag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 定義任務之間的依賴關係，這樣的範例為先執行start_task後再執行python_task&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;start_task&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;python_task&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;scheduler&#34;&gt;Scheduler&lt;/h2&gt;
&lt;p&gt;Scheduler會定時去檢查DAGs的資料夾&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;檢查是否有任何DAGs需要DAG Run&lt;/li&gt;
&lt;li&gt;對DAG Run 下的task建立schedule task instance&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以要建立一個任務最直覺的方式，就是將編寫好的DAG py檔放入DAGs資料夾。可以從airflow的&lt;a class=&#34;link&#34; href=&#34;https://airflow.apache.org/docs/apache-airflow/2.0.0/tutorial.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;example&lt;/a&gt;中複製並修改開始，或直接參考上個section的example&lt;/p&gt;
&lt;h2 id=&#34;ui操作&#34;&gt;UI操作&lt;/h2&gt;
&lt;p&gt;如果scheduler已經完成update，則我們就能在ui介面上看到我們新增的DAG。關於UI的操作說明礙於平台不適合放入過多圖片，因此改提供&lt;a class=&#34;link&#34; href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/ui.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方的UI說明連結&lt;/a&gt;。
大家可以朝著最基本的操作熟悉為目標:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;檢視DAG運作情況&lt;/li&gt;
&lt;li&gt;手動觸發DAG運作&lt;/li&gt;
&lt;li&gt;調閱DAG執行log&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Addiction Recovery</title>
        <link>http://shawn1251.github.io/zh-tw/post/addiction-recovery/</link>
        <pubDate>Mon, 06 Nov 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/post/addiction-recovery/</guid>
        <description>&lt;p&gt;本篇筆記是來自&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=LbbyLeR1ZRk&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;心河擺渡-成瘾始于痛苦，戒瘾终于平衡！深度解读多巴胺，用身体内稳态戒瘾&lt;/a&gt; 。影片中有作者自己的心得分享以及他對Anna Lembke的著作&lt;a class=&#34;link&#34; href=&#34;https://www.amazon.com/Drug-Dealer-MD-Doctors-Patients/dp/1421421402&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Drug Dealer, MD: How Doctors Were Duped, Patients Got Hooked, and Why It’s So Hard to Stop&lt;/a&gt; 的一些整理。內容十分受用，特地作筆記提醒自己。&lt;/p&gt;
&lt;h2 id=&#34;成癮的背景&#34;&gt;成癮的背景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;成癮的原因在於提升的多巴胺
&lt;ul&gt;
&lt;li&gt;巧克力提升55%&lt;/li&gt;
&lt;li&gt;尼古丁提高150%&lt;/li&gt;
&lt;li&gt;苯丙胺提高1000%&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多巴胺的主要作用不是在獲得獎勵後感到快樂，而是驅動人們追求獎勵的動機
&lt;ul&gt;
&lt;li&gt;好比看到巧克力時，多巴胺會啟動腦中獎賞迴路，還沒食用就能感受到愉悅，進而產生食用的衝動&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;大腦中產生快樂的區域與產生痛苦的區域是重疊的
&lt;ul&gt;
&lt;li&gt;快樂與痛苦有自我調節功能，當現在快樂的同時，大腦會在另一端產生足夠的痛苦來平衡&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;獎賞預測誤差
&lt;ul&gt;
&lt;li&gt;因為神經適應，實際的獎勵要超出預期才會令多巴胺有好的效果&lt;/li&gt;
&lt;li&gt;重度成癮者，感受快樂的門檻會越來越高，造成快感缺失&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;利用多巴胺機制&#34;&gt;利用多巴胺機制&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;根據臨床經驗，重製大腦獎賞迴路最短需要一個月&lt;/li&gt;
&lt;li&gt;以痛治痛
&lt;ul&gt;
&lt;li&gt;大腦會用痛苦平衡快樂，反過來用痛苦平衡快樂
&lt;ul&gt;
&lt;li&gt;根據研究，人浸泡在冷水中，血漿中的多巴胺濃度增加250%，而且持續時間超過浸泡的時間&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;運動是最好的選擇&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;物理阻斷
&lt;ul&gt;
&lt;li&gt;與成癮物徹底分開&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;激進誠實
&lt;ul&gt;
&lt;li&gt;前額葉皮質負責理性決策&lt;/li&gt;
&lt;li&gt;在多巴胺獎勵迴路發生時，說謊會抑制前額葉皮質作用，停止對獎勵迴路的約束，造成大腦認為自己沒有上癮&lt;/li&gt;
&lt;li&gt;在戒癮當中重要的一環就是重建前額葉皮質與多巴胺迴路的關係&lt;/li&gt;
&lt;li&gt;透過&amp;quot;說實話&amp;quot;強化前額葉皮質，提高自控力
&lt;ul&gt;
&lt;li&gt;在成癮時，與自我對話或是對身邊的人宣布自己有什麼癮&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>AWS 筆記-專案轉移至雲端</title>
        <link>http://shawn1251.github.io/zh-tw/post/aws-note-shift-to-cloud/</link>
        <pubDate>Thu, 02 Nov 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/post/aws-note-shift-to-cloud/</guid>
        <description>&lt;p&gt;最近在 Udemy 上學習 &lt;a class=&#34;link&#34; href=&#34;https://www.udemy.com/course/decodingdevops/#reviews&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DevOps Beginners to Advanced with Projects&lt;/a&gt;。在此做一些關於 AWS 使用上的筆記。&lt;/p&gt;
&lt;h2 id=&#34;original-application-stack&#34;&gt;Original Application Stack&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/hkhcoder/vprofile-project/tree/aws-LiftAndShift&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;專案github&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nginx&lt;/li&gt;
&lt;li&gt;Apache&lt;/li&gt;
&lt;li&gt;Tomcat&lt;/li&gt;
&lt;li&gt;RabbitMQ&lt;/li&gt;
&lt;li&gt;Memcache&lt;/li&gt;
&lt;li&gt;Mysql
&lt;figure&gt;&lt;img src=&#34;images/origin-arch.drawio.png&#34; width=&#34;30%&#34;/&gt;
&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;移轉目標&#34;&gt;移轉目標&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;EC2
&lt;ul&gt;
&lt;li&gt;vm for tomcat, rabbitmq,memcache, mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ELB
&lt;ul&gt;
&lt;li&gt;nginx load balancer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Autoscaling
&lt;ul&gt;
&lt;li&gt;automation for vm scaling&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;S3/EFS
&lt;ul&gt;
&lt;li&gt;shared storage&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;route53
&lt;ul&gt;
&lt;li&gt;private dns service&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;目標架構圖&#34;&gt;目標架構圖&lt;/h3&gt;
&lt;figure&gt;&lt;img src=&#34;images/shift-aws-arch.drawio.png&#34; width=&#34;70%&#34;/&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;flow-of-execution&#34;&gt;flow of execution&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create key pairs&lt;/li&gt;
&lt;li&gt;Create security groups
&lt;ul&gt;
&lt;li&gt;此處切為三組:
&lt;ul&gt;
&lt;li&gt;LB(取代nginx)&lt;/li&gt;
&lt;li&gt;APP(tomcat)&lt;/li&gt;
&lt;li&gt;Backend(包含rabbitmq, memcache, mysql)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Launch instance with user data
&lt;ul&gt;
&lt;li&gt;目前還是半自動化的流程&lt;/li&gt;
&lt;li&gt;手動建立intance並且於userdata中貼上環境安裝設定的shell&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Update ip to name mapping in route53
&lt;ul&gt;
&lt;li&gt;這邊設定一個內部DNS，讓instance之間的溝通可以用hostname&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Build application from source code
&lt;ul&gt;
&lt;li&gt;這邊仍是半自動化的部分，我們在local端將java的專案build完畢&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Upload to S3 bucket
&lt;ul&gt;
&lt;li&gt;使用aws cli上傳build的java war至APP instance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Download artifact to Tomcat EC2 instance
&lt;ul&gt;
&lt;li&gt;之前在local端是使用key的方式來連接s3&lt;/li&gt;
&lt;li&gt;此處instance連接S3練習使用IAM role
&lt;ul&gt;
&lt;li&gt;於IAM建立新的S3 access role&lt;/li&gt;
&lt;li&gt;於APP instance中加入建立的role&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aws s3 ls&lt;/code&gt;即可確認是否通過&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Setup ELB with https(cert from amazon certificate manager)
&lt;ul&gt;
&lt;li&gt;建立target group
&lt;ul&gt;
&lt;li&gt;須注意這邊是要通向app的8080port&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;建立LB
&lt;ul&gt;
&lt;li&gt;設定listen HTTP/HTTPS routing 至 target group&lt;/li&gt;
&lt;li&gt;購買網域後於aws的certificate manager申請ssl cert&lt;/li&gt;
&lt;li&gt;secure listener 選用from ACM，使用剛剛的ssl cert&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Map ELB endpoint to website name in DNS
&lt;ul&gt;
&lt;li&gt;於DNS提供商(此處是用godaddy)，建立CNAME，並轉向AWS LB的domain&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Verify
&lt;ul&gt;
&lt;li&gt;DNS的設定通常會需要一點時間&lt;/li&gt;
&lt;li&gt;可以直接先access LB的domain檢查80有沒有APP出現&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Build autoscaling group for tomcat instance
&lt;ul&gt;
&lt;li&gt;autoscaling三個步驟
&lt;ul&gt;
&lt;li&gt;AMI
&lt;ul&gt;
&lt;li&gt;此處我們以app作為目標，將當前的app instance create image&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;launch template
&lt;ul&gt;
&lt;li&gt;使用剛建立的AMI，security group 與原本的APP相同&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;autoscaling group
&lt;ul&gt;
&lt;li&gt;attach to existing load balancer&lt;/li&gt;
&lt;li&gt;選擇load balancer使用的target group&lt;/li&gt;
&lt;li&gt;設定scaling policy，可以使用CPU用量或是network in/out&lt;/li&gt;
&lt;li&gt;設定notification&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>AWS 筆記</title>
        <link>http://shawn1251.github.io/zh-tw/post/aws-note/</link>
        <pubDate>Tue, 31 Oct 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/post/aws-note/</guid>
        <description>&lt;p&gt;最近在 Udemy 上學習 &lt;a class=&#34;link&#34; href=&#34;https://www.udemy.com/course/decodingdevops/#reviews&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DevOps Beginners to Advanced with Projects&lt;/a&gt;。在此做一些關於 AWS 使用上的筆記&lt;/p&gt;
&lt;h2 id=&#34;建立ec2&#34;&gt;建立EC2&lt;/h2&gt;
&lt;p&gt;最基本的執行單位&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name and Tag
&lt;ul&gt;
&lt;li&gt;這邊可以選用 &lt;code&gt;add additional tag&lt;/code&gt;，多補充標籤，方便在aws console上可以快速搜尋指定的instance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AMI
&lt;ul&gt;
&lt;li&gt;AMI 是image，有點類似docker上取用image後run成container，但在此是run 成 instance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;instance type
&lt;ul&gt;
&lt;li&gt;由於目前是 free tier，只使用過 t2.micro。實際使用情境可以根據需求選擇不同等級的資源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;key pair
&lt;ul&gt;
&lt;li&gt;由於aws在遠端登入時都是採用ssh key，因次在這個階段要選用此instance的key pair。&lt;/li&gt;
&lt;li&gt;方便的是一組key pair可以被重複使用在不同instance上。可因應實際使用作key pair管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;network setting
&lt;ul&gt;
&lt;li&gt;主要在建立進出規則&lt;/li&gt;
&lt;li&gt;通常會打開的in bound是ssh，source的部分可以加入my ip&lt;/li&gt;
&lt;li&gt;如果是網頁服務用instance，一般會加入HTTP，並且source為anywhere&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;configure storage
&lt;ul&gt;
&lt;li&gt;storage分成很多類型。好比SSD，HDD，磁帶，也有根據IO做的特化型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;advanced
&lt;ul&gt;
&lt;li&gt;此處我使用到的是 &lt;code&gt;User data&lt;/code&gt; 這一個欄位。這部分可以直接寫上shell，方便在啟動的時候就預先裝載軟體或完成相關設定&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;elastic-block-store&#34;&gt;Elastic Block Store&lt;/h2&gt;
&lt;p&gt;儲存體&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;volume type
&lt;ul&gt;
&lt;li&gt;storage分成很多類型。好比SSD，HDD，磁帶，也有根據IO做的特化型&lt;/li&gt;
&lt;li&gt;還可以選擇建立地區&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;aws 裡volume可以動態attach
&lt;ul&gt;
&lt;li&gt;attach 在指定的instance&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fdisk -l&lt;/code&gt; 可以檢查該volume的名稱&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fdisk /dev/xvdf&lt;/code&gt; 這個路徑可能有所不同，根據前一個指令取得的dev更換
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;m&lt;/code&gt; 可以檢視可用指令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt; new partition&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt; primary&lt;/li&gt;
&lt;li&gt;partition number: default 1&lt;/li&gt;
&lt;li&gt;First sector: default 2048&lt;/li&gt;
&lt;li&gt;Last sector: default&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt; write table to disk&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkfs.ext4 /dev/xvdf1&lt;/code&gt;: 這個指令可以根據要使用的format做更換，本處使用ext4&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;lsblk&lt;/code&gt; 檢查是否出現&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mount /dev/xvdf1 {target path}&lt;/code&gt; 就能進行掛載
&lt;ul&gt;
&lt;li&gt;如果要讓其自動掛載，請修改&lt;code&gt;/etc/fstab&lt;/code&gt;。往後就能開機自動掛載也可使用&lt;code&gt;mount -a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;snapshot
&lt;ul&gt;
&lt;li&gt;通常主要的資料都會使用另外的volume，好比database的data&lt;/li&gt;
&lt;li&gt;我們可以使用 EBS 中的 snapshot 功能，為當前的volume進行備份&lt;/li&gt;
&lt;li&gt;之後一旦有需要進行還原，就可以對指定的snapshot執行create volume from snapshot，就可以將當時的內容重新掛載到instance上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;load-balancing&#34;&gt;Load Balancing&lt;/h2&gt;
&lt;p&gt;以兩個執行同樣http server的instances做example&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立target group
&lt;ul&gt;
&lt;li&gt;target group 的health check用來確認instance是否正常，如果是網頁伺服器，可以設定http路徑定時對指定頁面進行請求&lt;/li&gt;
&lt;li&gt;將目標的instances拉入target group&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;建立load balancer
&lt;ul&gt;
&lt;li&gt;先以 Application Load Balance 為 example&lt;/li&gt;
&lt;li&gt;security group 由於是web server，要設定inbound 為 HTTP ipv4/v6 anywhere&lt;/li&gt;
&lt;li&gt;listener &amp;amp; routing 設定為轉發到剛才創建的target group&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;回頭設定target group的security group
&lt;ul&gt;
&lt;li&gt;因為剛剛並沒有設定load balancer所在的security group可以access到target group。因此要將load balancer所在的security group加入target group 的security 中。 inbound HTTP custom {sg id}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cloud-watch&#34;&gt;Cloud Watch&lt;/h2&gt;
&lt;p&gt;可以用來建立警告，此處以cpu資源作作為example&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;all alarm -&amp;gt; create alarm&lt;/li&gt;
&lt;li&gt;select metric -&amp;gt; ec2 -&amp;gt; pre instance metric&lt;/li&gt;
&lt;li&gt;尋找目標的instance id，並選取CPUUtilization&lt;/li&gt;
&lt;li&gt;在greater than..的部分設定想要的百分比，好比60&lt;/li&gt;
&lt;li&gt;最後，設定通知的內容還有對象email或群組&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;efs&#34;&gt;EFS&lt;/h2&gt;
&lt;p&gt;這有點類似我們linux上在用的NFS，適合作為多個instance共同的儲存空間&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立security group
&lt;ul&gt;
&lt;li&gt;由於EFS是基於網路的連線，所以必須先設定security group&lt;/li&gt;
&lt;li&gt;將inbound 加入 NFS，source 為目標instance的security group&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;EFS -&amp;gt; create file system
&lt;ul&gt;
&lt;li&gt;這邊練習用的performance setting使用預設的enhanced, elastic即可。實際使用根據需求調整&lt;/li&gt;
&lt;li&gt;Network setting這邊所有availability zone的security group 都選擇剛剛新建立給EFS用的security group。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;建立access point
&lt;ul&gt;
&lt;li&gt;file system 選擇剛建立的file system id&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;從EC2進行mount
&lt;ul&gt;
&lt;li&gt;連線EFS要一些工具，執行&lt;code&gt;sudo yum install -y amazon-efs-utils&lt;/code&gt;安裝。這部分可以參考&lt;a class=&#34;link&#34; href=&#34;https://docs.aws.amazon.com/efs/latest/ug/installing-amazon-efs-utils.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;接下來設定/etc/fstab
&lt;ul&gt;
&lt;li&gt;加入這一行 &lt;code&gt;{file-system-id}:/ {efs-mount-point} efs _netdev,noresvport,tls,accesspoint={access-point-id} 0 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可參考&lt;a class=&#34;link&#34; href=&#34;https://docs.aws.amazon.com/efs/latest/ug/automount-with-efs-mount-helper.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;執行&lt;code&gt;mount -fav&lt;/code&gt;。若出現 {mount-point} : successfully mounted，就完成了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>常用於filter的shell command </title>
        <link>http://shawn1251.github.io/zh-tw/post/shell-cmd-filter/</link>
        <pubDate>Mon, 30 Oct 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/post/shell-cmd-filter/</guid>
        <description>&lt;p&gt;對於有在使用linux的初階使用者，cp mv ls 等的指令應該都用的很熟練了。這邊要筆記的是我一些常用但也花了一段時間才熟練的指令&lt;/p&gt;
&lt;h2 id=&#34;cat&#34;&gt;cat&lt;/h2&gt;
&lt;p&gt;大多數使用cat是用來顯示檔案的內容，如 &lt;code&gt;cat {your file}&lt;/code&gt;。但其實他還有連結兩個檔案，與創建檔案寫入的功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;連接兩檔案
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat {file1} {file2} &amp;gt; {merged file}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;創建新檔案並寫入
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat &amp;gt; {your file}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;他會接收你接下來的輸入並寫入檔案&lt;/li&gt;
&lt;li&gt;所以有些自動化腳本會使用這個指令來自動化創建檔案
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt; testFile &amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{your content}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;grep&#34;&gt;grep&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grep -R SELINUX /etc/*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-i 忽略大小寫&lt;/li&gt;
&lt;li&gt;-R 包含子資料夾&lt;/li&gt;
&lt;li&gt;-v 反向，輸出關鍵字以外的內容&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cut&#34;&gt;cut&lt;/h2&gt;
&lt;p&gt;可以用來快速提取固定格式檔案中的內容。好比&lt;code&gt;/etc/passwd&lt;/code&gt; 中，可以看見內容都是以&amp;quot;:&amp;ldquo;做分隔&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root:x:0:0:root:/root:/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vagrant:x:1000:1000::/home/vagrant:/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此時我們用cut指令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cut -d: -f1 /etc/passwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-d 是切分的參數，後面接著&amp;rdquo;:&amp;ldquo;代表要以&amp;rdquo;:&amp;ldquo;做分隔&lt;/li&gt;
&lt;li&gt;-f1 是要提取切分後的field 1的意思，此處取出的部分會是username&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;出來的output就會是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vagrant
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;awk&#34;&gt;awk&lt;/h2&gt;
&lt;p&gt;前一個指令&lt;code&gt;cut&lt;/code&gt;適用於有適合的separator，當變化較複雜時我們使用awk。如果是上述的例子改用awk改寫會是:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;awk -F&amp;#39;:&amp;#39; &amp;#39;{print $1}&amp;#39; /etc/passwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-F 是用來定義sepeartor&lt;/li&gt;
&lt;li&gt;{print $1} 是用來定義輸出，此處是輸出切分後的第一位&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sed&#34;&gt;sed&lt;/h2&gt;
&lt;p&gt;用來做文字取代，注意的是他是對stream做取代，所以不會覆蓋到原本文件。舉例如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;echo &amp;#34;this is a book.&amp;#34; &amp;gt; test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 建立一個範例文字
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sed &amp;#39;s/book/dog/g&amp;#39; test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; this is a dog.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 他將文字輸出的book替換成dog
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# s 為search
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# g 為global
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# test 可以替換成&amp;#39;*&amp;#39;，更改複數個檔案
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; this is a book.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 原本的檔案沒有變化
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 如果要覆蓋，可以加上 -i
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sed -i &amp;#39;s/book/dog/g&amp;#39; test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; this is a dog.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;redirection&#34;&gt;redirection&lt;/h2&gt;
&lt;p&gt;我們在對linux下指令的輸出預設是在螢幕上，而我們也可以將輸出進行導向轉移到file。
以下有幾個重點:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; 會對輸出對象覆蓋，&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 是append&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt;是stdout, &lt;code&gt;2&lt;/code&gt;是stderr&lt;/li&gt;
&lt;li&gt;可以使用&lt;code&gt;&amp;amp;&lt;/code&gt;對所有輸出都進行導向&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 當目標是導出stdout，不用特別加上1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls &amp;gt;&amp;gt; tmpfile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# lss 為不存在指令，bash會報錯，此時可以將他報錯的stderr進行導出。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;lss 2&amp;gt;&amp;gt; tmpfile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# &amp;amp;符號代表將stdout stderr都導出
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls &amp;amp;&amp;gt;&amp;gt; tmpfile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;lss &amp;amp;&amp;gt;&amp;gt; tmpfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;pipe&#34;&gt;pipe&lt;/h2&gt;
&lt;p&gt;使用pipe &lt;code&gt;|&lt;/code&gt;將輸出作為下個指令的輸入。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 我們將ls輸出給wc計算行數
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls | wc -l
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 將free輸出的mem欄位提取出來
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;free | grep -i Mem
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>vagrant 筆記</title>
        <link>http://shawn1251.github.io/zh-tw/post/vagrant-intro/</link>
        <pubDate>Sat, 28 Oct 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/post/vagrant-intro/</guid>
        <description>&lt;p&gt;一個command line tool方便自動化啟動VM。vagrant本身不是hypervisor，而是基於hypervisor上的一層應用，令使用者可以利用他快速架設VM於hypervisor上。本身也不需要OS image，設定檔Vagrantfile中指定的image(box)會從vagrant cloud取用。在Vagrantfile中定義所需要的參數，即可使用&lt;code&gt;vagrant up&lt;/code&gt;啟動&lt;/p&gt;
&lt;h2 id=&#34;常用指令&#34;&gt;常用指令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;vagrant init {box name}&lt;/li&gt;
&lt;li&gt;vagrant up&lt;/li&gt;
&lt;li&gt;vagrant ssh&lt;/li&gt;
&lt;li&gt;vagrant halt&lt;/li&gt;
&lt;li&gt;vagrant destroy&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;流程&#34;&gt;流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;create folder&lt;/li&gt;
&lt;li&gt;create Vagrantfile&lt;/li&gt;
&lt;li&gt;vagrant up&lt;/li&gt;
&lt;li&gt;vagrant ssh&lt;/li&gt;
&lt;li&gt;vagrant halt/destroy&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;啟動範例&#34;&gt;啟動範例&lt;/h2&gt;
&lt;p&gt;請在這邊找尋自己想要啟動的 box &lt;a class=&#34;link&#34; href=&#34;https://app.vagrantup.com/boxes/search&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://app.vagrantup.com/boxes/search&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vagrant init {box name}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vagrant up
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vagrant global-status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;vagrantfile-的-provision&#34;&gt;Vagrantfile 的 provision&lt;/h2&gt;
&lt;p&gt;Vagrantfile 中有一段 provision，可以用於設定vm第一次啟動前要執行的指令，好比安裝指定的軟體。可以參考官方對Vagrantfile的說明&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 這邊以在provision階段安裝apache2 server為例
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   config.vm.provision &amp;#34;shell&amp;#34;, inline: &amp;lt;&amp;lt;-SHELL
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     apt-get install -y apache2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   SHELL
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>安裝chocolatey</title>
        <link>http://shawn1251.github.io/zh-tw/post/install-chocolatey/</link>
        <pubDate>Tue, 24 Oct 2023 06:42:46 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/post/install-chocolatey/</guid>
        <description>&lt;p&gt;chocolatey 是windows上一個安裝軟體的工具。我以前都是使用macOS為主，chocolatey就像是mac上的brew一樣。有了他，安裝軟體變得方便許多。&lt;/p&gt;
&lt;h2 id=&#34;安裝&#34;&gt;安裝&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Get-ExecutionPolicy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 若為 restricted，以系統管理員執行powershell後輸入以下指令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Set-ExecutionPolicy&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AllSigned&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 輸入Y or A 完成權限設定&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Set-ExecutionPolicy&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Bypass&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Scope&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Process&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Force&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iex &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;New-Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Net&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WebClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;DownloadString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;https://chocolatey.org/install.ps1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 最後執行`choco`來確認是否有安裝成功&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;choco&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;使用&#34;&gt;使用&lt;/h2&gt;
&lt;p&gt;我們可以前往 &lt;a class=&#34;link&#34; href=&#34;https://community.chocolatey.org/packages&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://community.chocolatey.org/packages&lt;/a&gt; 網站上搜尋目標的軟體
好比我們搜尋virtual box，就可以看見他將指令寫在後方&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;choco&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;virtualbox&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;執行指令後就會自動安裝了!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>設定github page</title>
        <link>http://shawn1251.github.io/zh-tw/post/setting-your-first-githubpage/</link>
        <pubDate>Sat, 21 Oct 2023 06:42:46 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/post/setting-your-first-githubpage/</guid>
        <description>&lt;p&gt;本篇文章用來記錄這次以Hugo建立Blog後發佈到GitHub Page的過程。
GitHub本身有個免費的個人網站服務稱作GitHub Page。只要將想要發布的網頁內容上傳到指定格式的repository即可。&lt;/p&gt;
&lt;h2 id=&#34;事前準備&#34;&gt;事前準備&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/signup&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 帳號&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安裝 git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;你的目標網站&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;建立&#34;&gt;建立&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;點擊repository，New&lt;/li&gt;
&lt;li&gt;在repository name這個欄位填入&amp;quot;{你的帳號}&amp;quot;.github.io&lt;/li&gt;
&lt;li&gt;點擊 create repository&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;上傳&#34;&gt;上傳&lt;/h2&gt;
&lt;p&gt;接下來我們就要將本地端的網站推送到github上，若沒有網站僅是想要做測試，可以簡單建立一個&lt;code&gt;index.html&lt;/code&gt;做測試&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 為當前網站建立git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 加入stage並commit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 建立main分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -M main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 將遠端repository加入設定並命名為origin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin https://github.com/&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;你的帳號&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;/&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;你的帳號&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;.github.io.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 將當前專案push到github上&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;檢視&#34;&gt;檢視&lt;/h2&gt;
&lt;p&gt;正常的話，前往&lt;code&gt;https://{你的帳號}.github.io&lt;/code&gt;就能看到剛才推上去的網頁了!&lt;/p&gt;
&lt;h2 id=&#34;以hugo為例建立網站並上傳&#34;&gt;以Hugo為例，建立網站並上傳&lt;/h2&gt;
&lt;p&gt;承接上一篇&lt;a class=&#34;link&#34; href=&#34;http://shawn1251.github.io/zh-tw/post/first-post/&#34; &gt;以Hugo建立第一篇Post&lt;/a&gt;，我們可以利用GitHub Page對成果進行發布。
記得更改config中的baseURL&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# build&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 進入靜態網站的資料夾&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 承上說明不贅述&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -M main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin https://github.com/&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;你的帳號&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;/&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;你的帳號&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;.github.io.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>First Post with Hugo</title>
        <link>http://shawn1251.github.io/zh-tw/post/first-post/</link>
        <pubDate>Fri, 20 Oct 2023 00:00:00 +0800</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/post/first-post/</guid>
        <description>&lt;p&gt;這次心血來潮決定將一些過往的筆記進行整理，在尋找平台的時候參考了友人的建議選擇了Hugo搭配github page。以下就來記錄一下過程。&lt;/p&gt;
&lt;h1 id=&#34;hugo&#34;&gt;Hugo&lt;/h1&gt;
&lt;p&gt;簡單介紹一下Hugo， &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo&lt;/a&gt; 是用Golang開發的靜態網站產生工具。靜態網站不依賴後端，速度快又不必架設資料庫，特別適合開發展示用的網站。以前很流行使用wordpress架設個人網站，
相較於這種功能豐富的CMS，若需求單純，其實更加推薦使用靜態網站，同樣類型的工具還有 &lt;a class=&#34;link&#34; href=&#34;https://hexo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hexo&lt;/a&gt; 與 &lt;a class=&#34;link&#34; href=&#34;https://jekyllrb.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jekyll&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Hugo的本身由Golang開發，所以我們在使用的時候僅需要安裝編譯好的Hugo執行檔，不用再安裝其他相依語言如ruby、js。我們可以先瀏覽一下別人建立好的 &lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/tags/blog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo template&lt;/a&gt; 想像一下之後的作品效果。&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;installation&lt;/h2&gt;
&lt;p&gt;我們這邊參照官方的教學 &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/quick-start/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gohugo.io/getting-started/quick-start/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安裝hugo&#34;&gt;安裝Hugo&lt;/h3&gt;
&lt;p&gt;請根據自己的作業系統選擇 &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/installation/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安裝方法&lt;/a&gt;。
我是使用ubuntu系統，這邊預設已經安裝git，安裝語法如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 先安裝sass套件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo snap install dart-sass
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安裝hugo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo snap install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;安裝完成後可以執行檢查版本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;嘗試建立第一個專案&#34;&gt;嘗試建立第一個專案&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 建立專案&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new site quickstart
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; quickstart
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 加入theme ananke 作為git的submodule，方便與原專案分離更新&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 對當前專案指定使用ananke作為theme&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;theme = &amp;#39;ananke&amp;#39;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; hugo.toml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 執行web server顯示成果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;加入內容&#34;&gt;加入內容&lt;/h3&gt;
&lt;p&gt;執行上述步驟後應該已經能夠看到一個首頁黑白的簡單homepage了。
接著我們要加入個人的內容，我們可以使用hugo內建的指令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 建立一個叫做my-first-post的post&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new content posts/my-first-post.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此時我們再去&lt;code&gt;content/posts/&lt;/code&gt;下就會看到出現了一個md檔案&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+++
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;title = &amp;#39;My First Post&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;date = 2023-10-20T21:37:17+08:00
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;draft = true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+++
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;與空白專案的內容不同，他的開頭會有這樣的文字。須注意這是hugo的markdown必要的metadata，如果刪除了就不會出現在首頁上了。
我們接著加上幾行自己的內容。參照 &lt;a class=&#34;link&#34; href=&#34;https://markdown.tw/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;markdown語法教學&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+++
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;title = &amp;#39;My First Post&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;date = 2023-10-20T21:37:17+08:00
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;draft = false
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+++
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gh&#34;&gt;# hello world
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gh&#34;&gt;&lt;/span&gt;hello
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這邊須注意要將draft改回false，否則&lt;code&gt;hugo server&lt;/code&gt;會不顯示，相對的需要使用&lt;code&gt;hugo server -D&lt;/code&gt;的模式才會顯示草稿內容。&lt;/p&gt;
&lt;h3 id=&#34;發布&#34;&gt;發布&lt;/h3&gt;
&lt;p&gt;只要執行指令&lt;code&gt;hugo&lt;/code&gt;就能開始根據內容進行打包建置。結果會在&lt;code&gt;public&lt;/code&gt;資料夾中。如果你剛好也有python3，我們可以執行內建的http server做簡單測試。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 -m http.server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;預設會在port 8000上，我們打開瀏覽器&lt;code&gt;localhost:8000&lt;/code&gt;就能看到本次建置的靜態網站了。&lt;/p&gt;
&lt;h2 id=&#34;問題&#34;&gt;問題&lt;/h2&gt;
&lt;h3 id=&#34;我要如何客製化模板&#34;&gt;我要如何客製化模板?&lt;/h3&gt;
&lt;p&gt;一般來說模板都有自己的document可以提供客製化需求。如這個blog使用的是 &lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;stack&lt;/a&gt; 。我在這個模板中遇到的問題就是要加入不存在theme當中的幾個icon。所以我要做的步驟會是前往原 repository fork 一份到自己的repository下，再進行客製化加入icon。&lt;/p&gt;
&lt;h3 id=&#34;找到了喜歡的模板不知道怎麼開始&#34;&gt;找到了喜歡的模板不知道怎麼開始?&lt;/h3&gt;
&lt;p&gt;通常模板專案下有基礎的 example site 可以參考他使怎麼使用這個模板的。以 &lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;stack&lt;/a&gt; 為例，他存在&lt;code&gt;exampleSite&lt;/code&gt;這個資料夾，裡面涵蓋了content與config.yaml等，可以直接將他複製出來到專案目錄中檢視。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>About</title>
        <link>http://shawn1251.github.io/zh-tw/page/about/</link>
        <pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/page/about/</guid>
        <description>&lt;p&gt;一個善於溝通、負責任且具有邏輯思維的人，能夠團隊合作也擅長獨立作業。喜歡運動與料理。熱衷於學習未知的事物，目前正在自學嵌入式系統開發。&lt;/p&gt;
&lt;h2 id=&#34;經歷&#34;&gt;經歷&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CEO &amp;amp; Software Engineer at 相位資訊 (2019/06 - 2023-07)&lt;/li&gt;
&lt;li&gt;Software Engineer at 國立臺灣海洋大學 (2018/01 - 2019/06)&lt;/li&gt;
&lt;li&gt;Consultant &amp;amp; IT Support at 一芳水果茶(英國) &amp;amp; JIABA London (2017/08 - 2018/01)&lt;/li&gt;
&lt;li&gt;MIS at 航空警察局資訊室-替代役 (2016/08 - 2017/08)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;學歷&#34;&gt;學歷&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;國立臺灣海洋大學 資訊工程學系 碩士 (2020/01 - 2021/07)&lt;/li&gt;
&lt;li&gt;國立臺灣海洋大學 資訊工程學系 學士 (2012/09 - 2016/06)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技能&#34;&gt;技能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Programming Language:
&lt;ul&gt;
&lt;li&gt;Python, C++, TypeScript C, C#, Golang&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Database:
&lt;ul&gt;
&lt;li&gt;MongoDB, Redis, Postgres&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Other:
&lt;ul&gt;
&lt;li&gt;Linux, Docker, Shell script, Celery, FastAPI, flask, Vue3, React, Nginx&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Archives</title>
        <link>http://shawn1251.github.io/zh-tw/page/archives/</link>
        <pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/page/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Search</title>
        <link>http://shawn1251.github.io/zh-tw/page/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://shawn1251.github.io/zh-tw/page/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
